{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureReflectMetadataExists = exports.mapMiddlewareMetadataToArray = exports.mapSuperFieldResolverHandlers = exports.mapSuperResolverHandlers = void 0;\nconst errors_1 = require(\"../errors\");\nconst isThrowing_1 = require(\"../helpers/isThrowing\");\nfunction mapSuperResolverHandlers(definitions, superResolver, resolverMetadata) {\n  return definitions.map(metadata => metadata.target === superResolver ? {\n    ...metadata,\n    target: resolverMetadata.target,\n    resolverClassMetadata: resolverMetadata\n  } : metadata);\n}\nexports.mapSuperResolverHandlers = mapSuperResolverHandlers;\nfunction mapSuperFieldResolverHandlers(definitions, superResolver, resolverMetadata) {\n  const superMetadata = mapSuperResolverHandlers(definitions, superResolver, resolverMetadata);\n  return superMetadata.map(metadata => metadata.target === superResolver ? {\n    ...metadata,\n    getObjectType: (0, isThrowing_1.isThrowing)(metadata.getObjectType) ? resolverMetadata.getObjectType : metadata.getObjectType\n  } : metadata);\n}\nexports.mapSuperFieldResolverHandlers = mapSuperFieldResolverHandlers;\nfunction mapMiddlewareMetadataToArray(metadata) {\n  return metadata.map(m => m.middlewares).reduce((middlewares, resultArray) => resultArray.concat(middlewares), []);\n}\nexports.mapMiddlewareMetadataToArray = mapMiddlewareMetadataToArray;\nfunction ensureReflectMetadataExists() {\n  if (typeof Reflect !== \"object\" || typeof Reflect.getMetadata !== \"function\") {\n    throw new errors_1.ReflectMetadataMissingError();\n  }\n}\nexports.ensureReflectMetadataExists = ensureReflectMetadataExists;","map":{"version":3,"names":["Object","defineProperty","exports","value","ensureReflectMetadataExists","mapMiddlewareMetadataToArray","mapSuperFieldResolverHandlers","mapSuperResolverHandlers","errors_1","require","isThrowing_1","definitions","superResolver","resolverMetadata","map","metadata","target","resolverClassMetadata","superMetadata","getObjectType","isThrowing","m","middlewares","reduce","resultArray","concat","Reflect","getMetadata","ReflectMetadataMissingError"],"sources":["/Users/snawz1/node_modules/type-graphql/build/cjs/metadata/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureReflectMetadataExists = exports.mapMiddlewareMetadataToArray = exports.mapSuperFieldResolverHandlers = exports.mapSuperResolverHandlers = void 0;\nconst errors_1 = require(\"../errors\");\nconst isThrowing_1 = require(\"../helpers/isThrowing\");\nfunction mapSuperResolverHandlers(definitions, superResolver, resolverMetadata) {\n    return definitions.map(metadata => metadata.target === superResolver\n        ? {\n            ...metadata,\n            target: resolverMetadata.target,\n            resolverClassMetadata: resolverMetadata,\n        }\n        : metadata);\n}\nexports.mapSuperResolverHandlers = mapSuperResolverHandlers;\nfunction mapSuperFieldResolverHandlers(definitions, superResolver, resolverMetadata) {\n    const superMetadata = mapSuperResolverHandlers(definitions, superResolver, resolverMetadata);\n    return superMetadata.map(metadata => metadata.target === superResolver\n        ? {\n            ...metadata,\n            getObjectType: (0, isThrowing_1.isThrowing)(metadata.getObjectType)\n                ? resolverMetadata.getObjectType\n                : metadata.getObjectType,\n        }\n        : metadata);\n}\nexports.mapSuperFieldResolverHandlers = mapSuperFieldResolverHandlers;\nfunction mapMiddlewareMetadataToArray(metadata) {\n    return metadata\n        .map(m => m.middlewares)\n        .reduce((middlewares, resultArray) => resultArray.concat(middlewares), []);\n}\nexports.mapMiddlewareMetadataToArray = mapMiddlewareMetadataToArray;\nfunction ensureReflectMetadataExists() {\n    if (typeof Reflect !== \"object\" || typeof Reflect.getMetadata !== \"function\") {\n        throw new errors_1.ReflectMetadataMissingError();\n    }\n}\nexports.ensureReflectMetadataExists = ensureReflectMetadataExists;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,2BAA2B,GAAGF,OAAO,CAACG,4BAA4B,GAAGH,OAAO,CAACI,6BAA6B,GAAGJ,OAAO,CAACK,wBAAwB,GAAG,KAAK,CAAC;AAC9J,MAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,MAAMC,YAAY,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACrD,SAASF,wBAAwBA,CAACI,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,EAAE;EAC5E,OAAOF,WAAW,CAACG,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAKJ,aAAa,GAC9D;IACE,GAAGG,QAAQ;IACXC,MAAM,EAAEH,gBAAgB,CAACG,MAAM;IAC/BC,qBAAqB,EAAEJ;EAC3B,CAAC,GACCE,QAAQ,CAAC;AACnB;AACAb,OAAO,CAACK,wBAAwB,GAAGA,wBAAwB;AAC3D,SAASD,6BAA6BA,CAACK,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,EAAE;EACjF,MAAMK,aAAa,GAAGX,wBAAwB,CAACI,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,CAAC;EAC5F,OAAOK,aAAa,CAACJ,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAKJ,aAAa,GAChE;IACE,GAAGG,QAAQ;IACXI,aAAa,EAAE,CAAC,CAAC,EAAET,YAAY,CAACU,UAAU,EAAEL,QAAQ,CAACI,aAAa,CAAC,GAC7DN,gBAAgB,CAACM,aAAa,GAC9BJ,QAAQ,CAACI;EACnB,CAAC,GACCJ,QAAQ,CAAC;AACnB;AACAb,OAAO,CAACI,6BAA6B,GAAGA,6BAA6B;AACrE,SAASD,4BAA4BA,CAACU,QAAQ,EAAE;EAC5C,OAAOA,QAAQ,CACVD,GAAG,CAACO,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CACvBC,MAAM,CAAC,CAACD,WAAW,EAAEE,WAAW,KAAKA,WAAW,CAACC,MAAM,CAACH,WAAW,CAAC,EAAE,EAAE,CAAC;AAClF;AACApB,OAAO,CAACG,4BAA4B,GAAGA,4BAA4B;AACnE,SAASD,2BAA2BA,CAAA,EAAG;EACnC,IAAI,OAAOsB,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,WAAW,KAAK,UAAU,EAAE;IAC1E,MAAM,IAAInB,QAAQ,CAACoB,2BAA2B,CAAC,CAAC;EACpD;AACJ;AACA1B,OAAO,CAACE,2BAA2B,GAAGA,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}