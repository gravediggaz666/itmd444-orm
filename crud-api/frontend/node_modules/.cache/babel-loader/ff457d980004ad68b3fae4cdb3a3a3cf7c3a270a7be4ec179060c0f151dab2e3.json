{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildSchemaSync = exports.buildSchema = void 0;\nconst tslib_1 = require(\"tslib\");\nconst node_path_1 = tslib_1.__importDefault(require(\"node:path\"));\nconst schema_generator_1 = require(\"../schema/schema-generator\");\nconst emitSchemaDefinitionFile_1 = require(\"./emitSchemaDefinitionFile\");\nfunction getEmitSchemaDefinitionFileOptions(buildSchemaOptions) {\n  const defaultSchemaFilePath = node_path_1.default.resolve(process.cwd(), \"schema.graphql\");\n  return {\n    schemaFileName: typeof buildSchemaOptions.emitSchemaFile === \"string\" ? buildSchemaOptions.emitSchemaFile : typeof buildSchemaOptions.emitSchemaFile === \"object\" ? buildSchemaOptions.emitSchemaFile.path || defaultSchemaFilePath : defaultSchemaFilePath,\n    printSchemaOptions: typeof buildSchemaOptions.emitSchemaFile === \"object\" ? {\n      ...emitSchemaDefinitionFile_1.defaultPrintSchemaOptions,\n      ...buildSchemaOptions.emitSchemaFile\n    } : emitSchemaDefinitionFile_1.defaultPrintSchemaOptions\n  };\n}\nfunction loadResolvers(options) {\n  if (options.resolvers.length === 0) {\n    throw new Error(\"Empty `resolvers` array property found in `buildSchema` options!\");\n  }\n  return options.resolvers;\n}\nasync function buildSchema(options) {\n  const resolvers = loadResolvers(options);\n  const schema = schema_generator_1.SchemaGenerator.generateFromMetadata({\n    ...options,\n    resolvers\n  });\n  if (options.emitSchemaFile) {\n    const {\n      schemaFileName,\n      printSchemaOptions\n    } = getEmitSchemaDefinitionFileOptions(options);\n    await (0, emitSchemaDefinitionFile_1.emitSchemaDefinitionFile)(schemaFileName, schema, printSchemaOptions);\n  }\n  return schema;\n}\nexports.buildSchema = buildSchema;\nfunction buildSchemaSync(options) {\n  const resolvers = loadResolvers(options);\n  const schema = schema_generator_1.SchemaGenerator.generateFromMetadata({\n    ...options,\n    resolvers\n  });\n  if (options.emitSchemaFile) {\n    const {\n      schemaFileName,\n      printSchemaOptions\n    } = getEmitSchemaDefinitionFileOptions(options);\n    (0, emitSchemaDefinitionFile_1.emitSchemaDefinitionFileSync)(schemaFileName, schema, printSchemaOptions);\n  }\n  return schema;\n}\nexports.buildSchemaSync = buildSchemaSync;","map":{"version":3,"names":["Object","defineProperty","exports","value","buildSchemaSync","buildSchema","tslib_1","require","node_path_1","__importDefault","schema_generator_1","emitSchemaDefinitionFile_1","getEmitSchemaDefinitionFileOptions","buildSchemaOptions","defaultSchemaFilePath","default","resolve","process","cwd","schemaFileName","emitSchemaFile","path","printSchemaOptions","defaultPrintSchemaOptions","loadResolvers","options","resolvers","length","Error","schema","SchemaGenerator","generateFromMetadata","emitSchemaDefinitionFile","emitSchemaDefinitionFileSync"],"sources":["/Users/snawz1/node_modules/type-graphql/build/cjs/utils/buildSchema.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildSchemaSync = exports.buildSchema = void 0;\nconst tslib_1 = require(\"tslib\");\nconst node_path_1 = tslib_1.__importDefault(require(\"node:path\"));\nconst schema_generator_1 = require(\"../schema/schema-generator\");\nconst emitSchemaDefinitionFile_1 = require(\"./emitSchemaDefinitionFile\");\nfunction getEmitSchemaDefinitionFileOptions(buildSchemaOptions) {\n    const defaultSchemaFilePath = node_path_1.default.resolve(process.cwd(), \"schema.graphql\");\n    return {\n        schemaFileName: typeof buildSchemaOptions.emitSchemaFile === \"string\"\n            ? buildSchemaOptions.emitSchemaFile\n            : typeof buildSchemaOptions.emitSchemaFile === \"object\"\n                ? buildSchemaOptions.emitSchemaFile.path || defaultSchemaFilePath\n                : defaultSchemaFilePath,\n        printSchemaOptions: typeof buildSchemaOptions.emitSchemaFile === \"object\"\n            ? { ...emitSchemaDefinitionFile_1.defaultPrintSchemaOptions, ...buildSchemaOptions.emitSchemaFile }\n            : emitSchemaDefinitionFile_1.defaultPrintSchemaOptions,\n    };\n}\nfunction loadResolvers(options) {\n    if (options.resolvers.length === 0) {\n        throw new Error(\"Empty `resolvers` array property found in `buildSchema` options!\");\n    }\n    return options.resolvers;\n}\nasync function buildSchema(options) {\n    const resolvers = loadResolvers(options);\n    const schema = schema_generator_1.SchemaGenerator.generateFromMetadata({ ...options, resolvers });\n    if (options.emitSchemaFile) {\n        const { schemaFileName, printSchemaOptions } = getEmitSchemaDefinitionFileOptions(options);\n        await (0, emitSchemaDefinitionFile_1.emitSchemaDefinitionFile)(schemaFileName, schema, printSchemaOptions);\n    }\n    return schema;\n}\nexports.buildSchema = buildSchema;\nfunction buildSchemaSync(options) {\n    const resolvers = loadResolvers(options);\n    const schema = schema_generator_1.SchemaGenerator.generateFromMetadata({ ...options, resolvers });\n    if (options.emitSchemaFile) {\n        const { schemaFileName, printSchemaOptions } = getEmitSchemaDefinitionFileOptions(options);\n        (0, emitSchemaDefinitionFile_1.emitSchemaDefinitionFileSync)(schemaFileName, schema, printSchemaOptions);\n    }\n    return schema;\n}\nexports.buildSchemaSync = buildSchemaSync;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAGF,OAAO,CAACG,WAAW,GAAG,KAAK,CAAC;AACtD,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMC,WAAW,GAAGF,OAAO,CAACG,eAAe,CAACF,OAAO,CAAC,WAAW,CAAC,CAAC;AACjE,MAAMG,kBAAkB,GAAGH,OAAO,CAAC,4BAA4B,CAAC;AAChE,MAAMI,0BAA0B,GAAGJ,OAAO,CAAC,4BAA4B,CAAC;AACxE,SAASK,kCAAkCA,CAACC,kBAAkB,EAAE;EAC5D,MAAMC,qBAAqB,GAAGN,WAAW,CAACO,OAAO,CAACC,OAAO,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC;EAC1F,OAAO;IACHC,cAAc,EAAE,OAAON,kBAAkB,CAACO,cAAc,KAAK,QAAQ,GAC/DP,kBAAkB,CAACO,cAAc,GACjC,OAAOP,kBAAkB,CAACO,cAAc,KAAK,QAAQ,GACjDP,kBAAkB,CAACO,cAAc,CAACC,IAAI,IAAIP,qBAAqB,GAC/DA,qBAAqB;IAC/BQ,kBAAkB,EAAE,OAAOT,kBAAkB,CAACO,cAAc,KAAK,QAAQ,GACnE;MAAE,GAAGT,0BAA0B,CAACY,yBAAyB;MAAE,GAAGV,kBAAkB,CAACO;IAAe,CAAC,GACjGT,0BAA0B,CAACY;EACrC,CAAC;AACL;AACA,SAASC,aAAaA,CAACC,OAAO,EAAE;EAC5B,IAAIA,OAAO,CAACC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAChC,MAAM,IAAIC,KAAK,CAAC,kEAAkE,CAAC;EACvF;EACA,OAAOH,OAAO,CAACC,SAAS;AAC5B;AACA,eAAerB,WAAWA,CAACoB,OAAO,EAAE;EAChC,MAAMC,SAAS,GAAGF,aAAa,CAACC,OAAO,CAAC;EACxC,MAAMI,MAAM,GAAGnB,kBAAkB,CAACoB,eAAe,CAACC,oBAAoB,CAAC;IAAE,GAAGN,OAAO;IAAEC;EAAU,CAAC,CAAC;EACjG,IAAID,OAAO,CAACL,cAAc,EAAE;IACxB,MAAM;MAAED,cAAc;MAAEG;IAAmB,CAAC,GAAGV,kCAAkC,CAACa,OAAO,CAAC;IAC1F,MAAM,CAAC,CAAC,EAAEd,0BAA0B,CAACqB,wBAAwB,EAAEb,cAAc,EAAEU,MAAM,EAAEP,kBAAkB,CAAC;EAC9G;EACA,OAAOO,MAAM;AACjB;AACA3B,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjC,SAASD,eAAeA,CAACqB,OAAO,EAAE;EAC9B,MAAMC,SAAS,GAAGF,aAAa,CAACC,OAAO,CAAC;EACxC,MAAMI,MAAM,GAAGnB,kBAAkB,CAACoB,eAAe,CAACC,oBAAoB,CAAC;IAAE,GAAGN,OAAO;IAAEC;EAAU,CAAC,CAAC;EACjG,IAAID,OAAO,CAACL,cAAc,EAAE;IACxB,MAAM;MAAED,cAAc;MAAEG;IAAmB,CAAC,GAAGV,kCAAkC,CAACa,OAAO,CAAC;IAC1F,CAAC,CAAC,EAAEd,0BAA0B,CAACsB,4BAA4B,EAAEd,cAAc,EAAEU,MAAM,EAAEP,kBAAkB,CAAC;EAC5G;EACA,OAAOO,MAAM;AACjB;AACA3B,OAAO,CAACE,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}