{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLUUID = exports.GraphQLUUIDConfig = void 0;\nconst graphql_1 = require(\"graphql\");\nconst error_js_1 = require(\"../error.js\");\nconst validate = (value, ast) => {\n  const UUID_REGEX = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\n  if (typeof value !== 'string') {\n    throw (0, error_js_1.createGraphQLError)(`Value is not string: ${value}`, ast ? {\n      nodes: ast\n    } : undefined);\n  }\n  if (value.startsWith('{')) {\n    value = value.substring(1, value.length - 1);\n  }\n  if (!UUID_REGEX.test(value)) {\n    throw (0, error_js_1.createGraphQLError)(`Value is not a valid UUID: ${value}`, ast ? {\n      nodes: ast\n    } : undefined);\n  }\n  return value;\n};\nexports.GraphQLUUIDConfig = {\n  name: `UUID`,\n  description: `A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.`,\n  serialize(value) {\n    return validate(value);\n  },\n  parseValue(value) {\n    return validate(value);\n  },\n  parseLiteral(ast) {\n    if (ast.kind !== graphql_1.Kind.STRING) {\n      throw (0, error_js_1.createGraphQLError)(`Can only validate strings as UUIDs but got a: ${ast.kind}`, {\n        nodes: ast\n      });\n    }\n    return validate(ast.value, ast);\n  },\n  extensions: {\n    codegenScalarType: 'string',\n    jsonSchema: {\n      type: 'string',\n      format: 'uuid'\n    }\n  }\n};\nexports.GraphQLUUID = new graphql_1.GraphQLScalarType(exports.GraphQLUUIDConfig);","map":{"version":3,"names":["Object","defineProperty","exports","value","GraphQLUUID","GraphQLUUIDConfig","graphql_1","require","error_js_1","validate","ast","UUID_REGEX","createGraphQLError","nodes","undefined","startsWith","substring","length","test","name","description","serialize","parseValue","parseLiteral","kind","Kind","STRING","extensions","codegenScalarType","jsonSchema","type","format","GraphQLScalarType"],"sources":["/Users/snawz1/node_modules/graphql-scalars/cjs/scalars/UUID.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GraphQLUUID = exports.GraphQLUUIDConfig = void 0;\nconst graphql_1 = require(\"graphql\");\nconst error_js_1 = require(\"../error.js\");\nconst validate = (value, ast) => {\n    const UUID_REGEX = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\n    if (typeof value !== 'string') {\n        throw (0, error_js_1.createGraphQLError)(`Value is not string: ${value}`, ast ? { nodes: ast } : undefined);\n    }\n    if (value.startsWith('{')) {\n        value = value.substring(1, value.length - 1);\n    }\n    if (!UUID_REGEX.test(value)) {\n        throw (0, error_js_1.createGraphQLError)(`Value is not a valid UUID: ${value}`, ast ? { nodes: ast } : undefined);\n    }\n    return value;\n};\nexports.GraphQLUUIDConfig = {\n    name: `UUID`,\n    description: `A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.`,\n    serialize(value) {\n        return validate(value);\n    },\n    parseValue(value) {\n        return validate(value);\n    },\n    parseLiteral(ast) {\n        if (ast.kind !== graphql_1.Kind.STRING) {\n            throw (0, error_js_1.createGraphQLError)(`Can only validate strings as UUIDs but got a: ${ast.kind}`, {\n                nodes: ast,\n            });\n        }\n        return validate(ast.value, ast);\n    },\n    extensions: {\n        codegenScalarType: 'string',\n        jsonSchema: {\n            type: 'string',\n            format: 'uuid',\n        },\n    },\n};\nexports.GraphQLUUID = new graphql_1.GraphQLScalarType(exports.GraphQLUUIDConfig);\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAGF,OAAO,CAACG,iBAAiB,GAAG,KAAK,CAAC;AACxD,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,QAAQ,GAAGA,CAACN,KAAK,EAAEO,GAAG,KAAK;EAC7B,MAAMC,UAAU,GAAG,uGAAuG;EAC1H,IAAI,OAAOR,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAM,CAAC,CAAC,EAAEK,UAAU,CAACI,kBAAkB,EAAG,wBAAuBT,KAAM,EAAC,EAAEO,GAAG,GAAG;MAAEG,KAAK,EAAEH;IAAI,CAAC,GAAGI,SAAS,CAAC;EAC/G;EACA,IAAIX,KAAK,CAACY,UAAU,CAAC,GAAG,CAAC,EAAE;IACvBZ,KAAK,GAAGA,KAAK,CAACa,SAAS,CAAC,CAAC,EAAEb,KAAK,CAACc,MAAM,GAAG,CAAC,CAAC;EAChD;EACA,IAAI,CAACN,UAAU,CAACO,IAAI,CAACf,KAAK,CAAC,EAAE;IACzB,MAAM,CAAC,CAAC,EAAEK,UAAU,CAACI,kBAAkB,EAAG,8BAA6BT,KAAM,EAAC,EAAEO,GAAG,GAAG;MAAEG,KAAK,EAAEH;IAAI,CAAC,GAAGI,SAAS,CAAC;EACrH;EACA,OAAOX,KAAK;AAChB,CAAC;AACDD,OAAO,CAACG,iBAAiB,GAAG;EACxBc,IAAI,EAAG,MAAK;EACZC,WAAW,EAAG,8HAA6H;EAC3IC,SAASA,CAAClB,KAAK,EAAE;IACb,OAAOM,QAAQ,CAACN,KAAK,CAAC;EAC1B,CAAC;EACDmB,UAAUA,CAACnB,KAAK,EAAE;IACd,OAAOM,QAAQ,CAACN,KAAK,CAAC;EAC1B,CAAC;EACDoB,YAAYA,CAACb,GAAG,EAAE;IACd,IAAIA,GAAG,CAACc,IAAI,KAAKlB,SAAS,CAACmB,IAAI,CAACC,MAAM,EAAE;MACpC,MAAM,CAAC,CAAC,EAAElB,UAAU,CAACI,kBAAkB,EAAG,iDAAgDF,GAAG,CAACc,IAAK,EAAC,EAAE;QAClGX,KAAK,EAAEH;MACX,CAAC,CAAC;IACN;IACA,OAAOD,QAAQ,CAACC,GAAG,CAACP,KAAK,EAAEO,GAAG,CAAC;EACnC,CAAC;EACDiB,UAAU,EAAE;IACRC,iBAAiB,EAAE,QAAQ;IAC3BC,UAAU,EAAE;MACRC,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE;IACZ;EACJ;AACJ,CAAC;AACD7B,OAAO,CAACE,WAAW,GAAG,IAAIE,SAAS,CAAC0B,iBAAiB,CAAC9B,OAAO,CAACG,iBAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}