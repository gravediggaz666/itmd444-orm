{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Root = void 0;\nconst errors_1 = require(\"../errors\");\nconst findType_1 = require(\"../helpers/findType\");\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nfunction Root(propertyName) {\n  return (prototype, propertyKey, parameterIndex) => {\n    if (typeof propertyKey === \"symbol\") {\n      throw new errors_1.SymbolKeysNotSupportedError();\n    }\n    let getType;\n    try {\n      const typeInfo = (0, findType_1.findType)({\n        metadataKey: \"design:paramtypes\",\n        prototype,\n        propertyKey,\n        parameterIndex\n      });\n      getType = typeInfo.getType;\n    } catch {}\n    (0, getMetadataStorage_1.getMetadataStorage)().collectHandlerParamMetadata({\n      kind: \"root\",\n      target: prototype.constructor,\n      methodName: propertyKey,\n      index: parameterIndex,\n      propertyName,\n      getType\n    });\n  };\n}\nexports.Root = Root;","map":{"version":3,"names":["Object","defineProperty","exports","value","Root","errors_1","require","findType_1","getMetadataStorage_1","propertyName","prototype","propertyKey","parameterIndex","SymbolKeysNotSupportedError","getType","typeInfo","findType","metadataKey","getMetadataStorage","collectHandlerParamMetadata","kind","target","constructor","methodName","index"],"sources":["/Users/snawz1/node_modules/type-graphql/build/cjs/decorators/Root.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Root = void 0;\nconst errors_1 = require(\"../errors\");\nconst findType_1 = require(\"../helpers/findType\");\nconst getMetadataStorage_1 = require(\"../metadata/getMetadataStorage\");\nfunction Root(propertyName) {\n    return (prototype, propertyKey, parameterIndex) => {\n        if (typeof propertyKey === \"symbol\") {\n            throw new errors_1.SymbolKeysNotSupportedError();\n        }\n        let getType;\n        try {\n            const typeInfo = (0, findType_1.findType)({\n                metadataKey: \"design:paramtypes\",\n                prototype,\n                propertyKey,\n                parameterIndex,\n            });\n            getType = typeInfo.getType;\n        }\n        catch {\n        }\n        (0, getMetadataStorage_1.getMetadataStorage)().collectHandlerParamMetadata({\n            kind: \"root\",\n            target: prototype.constructor,\n            methodName: propertyKey,\n            index: parameterIndex,\n            propertyName,\n            getType,\n        });\n    };\n}\nexports.Root = Root;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,IAAI,GAAG,KAAK,CAAC;AACrB,MAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,MAAMC,UAAU,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AACjD,MAAME,oBAAoB,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AACtE,SAASF,IAAIA,CAACK,YAAY,EAAE;EACxB,OAAO,CAACC,SAAS,EAAEC,WAAW,EAAEC,cAAc,KAAK;IAC/C,IAAI,OAAOD,WAAW,KAAK,QAAQ,EAAE;MACjC,MAAM,IAAIN,QAAQ,CAACQ,2BAA2B,CAAC,CAAC;IACpD;IACA,IAAIC,OAAO;IACX,IAAI;MACA,MAAMC,QAAQ,GAAG,CAAC,CAAC,EAAER,UAAU,CAACS,QAAQ,EAAE;QACtCC,WAAW,EAAE,mBAAmB;QAChCP,SAAS;QACTC,WAAW;QACXC;MACJ,CAAC,CAAC;MACFE,OAAO,GAAGC,QAAQ,CAACD,OAAO;IAC9B,CAAC,CACD,MAAM,CACN;IACA,CAAC,CAAC,EAAEN,oBAAoB,CAACU,kBAAkB,EAAE,CAAC,CAACC,2BAA2B,CAAC;MACvEC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAEX,SAAS,CAACY,WAAW;MAC7BC,UAAU,EAAEZ,WAAW;MACvBa,KAAK,EAAEZ,cAAc;MACrBH,YAAY;MACZK;IACJ,CAAC,CAAC;EACN,CAAC;AACL;AACAZ,OAAO,CAACE,IAAI,GAAGA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}