{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseLiteral = exports.parseObject = exports.ensureObject = exports.identity = void 0;\nconst graphql_1 = require(\"graphql\");\nconst error_js_1 = require(\"../../error.js\");\nfunction identity(value) {\n  return value;\n}\nexports.identity = identity;\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction ensureObject(value, ast) {\n  if (typeof value !== 'object' || value === null || Array.isArray(value)) {\n    throw (0, error_js_1.createGraphQLError)(`JSONObject cannot represent non-object value: ${value}`, ast ? {\n      nodes: ast\n    } : undefined);\n  }\n  return value;\n}\nexports.ensureObject = ensureObject;\nfunction parseObject(ast, variables) {\n  if (ast.kind !== graphql_1.Kind.OBJECT) {\n    throw (0, error_js_1.createGraphQLError)(`JSONObject cannot represent non-object value: ${(0, graphql_1.print)(ast)}`, ast ? {\n      nodes: ast\n    } : undefined);\n  }\n  const value = Object.create(null);\n  ast.fields.forEach(field => {\n    // eslint-disable-next-line no-use-before-define\n    value[field.name.value] = parseLiteral(field.value, variables);\n  });\n  return value;\n}\nexports.parseObject = parseObject;\nfunction parseLiteral(ast, variables) {\n  switch (ast.kind) {\n    case graphql_1.Kind.STRING:\n    case graphql_1.Kind.BOOLEAN:\n      return ast.value;\n    case graphql_1.Kind.INT:\n    case graphql_1.Kind.FLOAT:\n      return parseFloat(ast.value);\n    case graphql_1.Kind.OBJECT:\n      return parseObject(ast, variables);\n    case graphql_1.Kind.LIST:\n      return ast.values.map(n => parseLiteral(n, variables));\n    case graphql_1.Kind.NULL:\n      return null;\n    case graphql_1.Kind.VARIABLE:\n      {\n        const name = ast.name.value;\n        return variables ? variables[name] : undefined;\n      }\n  }\n}\nexports.parseLiteral = parseLiteral;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseLiteral","parseObject","ensureObject","identity","graphql_1","require","error_js_1","ast","Array","isArray","createGraphQLError","nodes","undefined","variables","kind","Kind","OBJECT","print","create","fields","forEach","field","name","STRING","BOOLEAN","INT","FLOAT","parseFloat","LIST","values","map","n","NULL","VARIABLE"],"sources":["/Users/snawz1/node_modules/graphql-scalars/cjs/scalars/json/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseLiteral = exports.parseObject = exports.ensureObject = exports.identity = void 0;\nconst graphql_1 = require(\"graphql\");\nconst error_js_1 = require(\"../../error.js\");\nfunction identity(value) {\n    return value;\n}\nexports.identity = identity;\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction ensureObject(value, ast) {\n    if (typeof value !== 'object' || value === null || Array.isArray(value)) {\n        throw (0, error_js_1.createGraphQLError)(`JSONObject cannot represent non-object value: ${value}`, ast\n            ? {\n                nodes: ast,\n            }\n            : undefined);\n    }\n    return value;\n}\nexports.ensureObject = ensureObject;\nfunction parseObject(ast, variables) {\n    if (ast.kind !== graphql_1.Kind.OBJECT) {\n        throw (0, error_js_1.createGraphQLError)(`JSONObject cannot represent non-object value: ${(0, graphql_1.print)(ast)}`, ast\n            ? {\n                nodes: ast,\n            }\n            : undefined);\n    }\n    const value = Object.create(null);\n    ast.fields.forEach(field => {\n        // eslint-disable-next-line no-use-before-define\n        value[field.name.value] = parseLiteral(field.value, variables);\n    });\n    return value;\n}\nexports.parseObject = parseObject;\nfunction parseLiteral(ast, variables) {\n    switch (ast.kind) {\n        case graphql_1.Kind.STRING:\n        case graphql_1.Kind.BOOLEAN:\n            return ast.value;\n        case graphql_1.Kind.INT:\n        case graphql_1.Kind.FLOAT:\n            return parseFloat(ast.value);\n        case graphql_1.Kind.OBJECT:\n            return parseObject(ast, variables);\n        case graphql_1.Kind.LIST:\n            return ast.values.map(n => parseLiteral(n, variables));\n        case graphql_1.Kind.NULL:\n            return null;\n        case graphql_1.Kind.VARIABLE: {\n            const name = ast.name.value;\n            return variables ? variables[name] : undefined;\n        }\n    }\n}\nexports.parseLiteral = parseLiteral;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACK,QAAQ,GAAG,KAAK,CAAC;AAC7F,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,MAAMC,UAAU,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC5C,SAASF,QAAQA,CAACJ,KAAK,EAAE;EACrB,OAAOA,KAAK;AAChB;AACAD,OAAO,CAACK,QAAQ,GAAGA,QAAQ;AAC3B;AACA,SAASD,YAAYA,CAACH,KAAK,EAAEQ,GAAG,EAAE;EAC9B,IAAI,OAAOR,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAAIS,KAAK,CAACC,OAAO,CAACV,KAAK,CAAC,EAAE;IACrE,MAAM,CAAC,CAAC,EAAEO,UAAU,CAACI,kBAAkB,EAAG,iDAAgDX,KAAM,EAAC,EAAEQ,GAAG,GAChG;MACEI,KAAK,EAAEJ;IACX,CAAC,GACCK,SAAS,CAAC;EACpB;EACA,OAAOb,KAAK;AAChB;AACAD,OAAO,CAACI,YAAY,GAAGA,YAAY;AACnC,SAASD,WAAWA,CAACM,GAAG,EAAEM,SAAS,EAAE;EACjC,IAAIN,GAAG,CAACO,IAAI,KAAKV,SAAS,CAACW,IAAI,CAACC,MAAM,EAAE;IACpC,MAAM,CAAC,CAAC,EAAEV,UAAU,CAACI,kBAAkB,EAAG,iDAAgD,CAAC,CAAC,EAAEN,SAAS,CAACa,KAAK,EAAEV,GAAG,CAAE,EAAC,EAAEA,GAAG,GACpH;MACEI,KAAK,EAAEJ;IACX,CAAC,GACCK,SAAS,CAAC;EACpB;EACA,MAAMb,KAAK,GAAGH,MAAM,CAACsB,MAAM,CAAC,IAAI,CAAC;EACjCX,GAAG,CAACY,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;IACxB;IACAtB,KAAK,CAACsB,KAAK,CAACC,IAAI,CAACvB,KAAK,CAAC,GAAGC,YAAY,CAACqB,KAAK,CAACtB,KAAK,EAAEc,SAAS,CAAC;EAClE,CAAC,CAAC;EACF,OAAOd,KAAK;AAChB;AACAD,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjC,SAASD,YAAYA,CAACO,GAAG,EAAEM,SAAS,EAAE;EAClC,QAAQN,GAAG,CAACO,IAAI;IACZ,KAAKV,SAAS,CAACW,IAAI,CAACQ,MAAM;IAC1B,KAAKnB,SAAS,CAACW,IAAI,CAACS,OAAO;MACvB,OAAOjB,GAAG,CAACR,KAAK;IACpB,KAAKK,SAAS,CAACW,IAAI,CAACU,GAAG;IACvB,KAAKrB,SAAS,CAACW,IAAI,CAACW,KAAK;MACrB,OAAOC,UAAU,CAACpB,GAAG,CAACR,KAAK,CAAC;IAChC,KAAKK,SAAS,CAACW,IAAI,CAACC,MAAM;MACtB,OAAOf,WAAW,CAACM,GAAG,EAAEM,SAAS,CAAC;IACtC,KAAKT,SAAS,CAACW,IAAI,CAACa,IAAI;MACpB,OAAOrB,GAAG,CAACsB,MAAM,CAACC,GAAG,CAACC,CAAC,IAAI/B,YAAY,CAAC+B,CAAC,EAAElB,SAAS,CAAC,CAAC;IAC1D,KAAKT,SAAS,CAACW,IAAI,CAACiB,IAAI;MACpB,OAAO,IAAI;IACf,KAAK5B,SAAS,CAACW,IAAI,CAACkB,QAAQ;MAAE;QAC1B,MAAMX,IAAI,GAAGf,GAAG,CAACe,IAAI,CAACvB,KAAK;QAC3B,OAAOc,SAAS,GAAGA,SAAS,CAACS,IAAI,CAAC,GAAGV,SAAS;MAClD;EACJ;AACJ;AACAd,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}