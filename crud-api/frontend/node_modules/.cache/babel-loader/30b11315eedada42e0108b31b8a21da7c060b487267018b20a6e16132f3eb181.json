{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLDateTimeISO = exports.GraphQLDateTimeISOConfig = void 0;\nconst graphql_1 = require(\"graphql\");\nconst DateTime_js_1 = require(\"./DateTime.js\");\nexports.GraphQLDateTimeISOConfig = {\n  ...DateTime_js_1.GraphQLDateTimeConfig,\n  name: 'DateTimeISO',\n  description: 'A date-time string at UTC, such as 2007-12-03T10:15:30Z, ' + 'compliant with the `date-time` format outlined in section 5.6 of ' + 'the RFC 3339 profile of the ISO 8601 standard for representation ' + 'of dates and times using the Gregorian calendar.' + 'This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.',\n  serialize(value) {\n    const date = DateTime_js_1.GraphQLDateTimeConfig.serialize(value);\n    return date.toISOString();\n  }\n};\nexports.GraphQLDateTimeISO = new graphql_1.GraphQLScalarType(exports.GraphQLDateTimeISOConfig);","map":{"version":3,"names":["Object","defineProperty","exports","value","GraphQLDateTimeISO","GraphQLDateTimeISOConfig","graphql_1","require","DateTime_js_1","GraphQLDateTimeConfig","name","description","serialize","date","toISOString","GraphQLScalarType"],"sources":["/Users/snawz1/node_modules/graphql-scalars/cjs/scalars/iso-date/DateTimeISO.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GraphQLDateTimeISO = exports.GraphQLDateTimeISOConfig = void 0;\nconst graphql_1 = require(\"graphql\");\nconst DateTime_js_1 = require(\"./DateTime.js\");\nexports.GraphQLDateTimeISOConfig = {\n    ...DateTime_js_1.GraphQLDateTimeConfig,\n    name: 'DateTimeISO',\n    description: 'A date-time string at UTC, such as 2007-12-03T10:15:30Z, ' +\n        'compliant with the `date-time` format outlined in section 5.6 of ' +\n        'the RFC 3339 profile of the ISO 8601 standard for representation ' +\n        'of dates and times using the Gregorian calendar.' +\n        'This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.',\n    serialize(value) {\n        const date = DateTime_js_1.GraphQLDateTimeConfig.serialize(value);\n        return date.toISOString();\n    },\n};\nexports.GraphQLDateTimeISO = new graphql_1.GraphQLScalarType(exports.GraphQLDateTimeISOConfig);\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,wBAAwB,GAAG,KAAK,CAAC;AACtE,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC,MAAMC,aAAa,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC9CL,OAAO,CAACG,wBAAwB,GAAG;EAC/B,GAAGG,aAAa,CAACC,qBAAqB;EACtCC,IAAI,EAAE,aAAa;EACnBC,WAAW,EAAE,2DAA2D,GACpE,mEAAmE,GACnE,mEAAmE,GACnE,kDAAkD,GAClD,uGAAuG;EAC3GC,SAASA,CAACT,KAAK,EAAE;IACb,MAAMU,IAAI,GAAGL,aAAa,CAACC,qBAAqB,CAACG,SAAS,CAACT,KAAK,CAAC;IACjE,OAAOU,IAAI,CAACC,WAAW,CAAC,CAAC;EAC7B;AACJ,CAAC;AACDZ,OAAO,CAACE,kBAAkB,GAAG,IAAIE,SAAS,CAACS,iBAAiB,CAACb,OAAO,CAACG,wBAAwB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}