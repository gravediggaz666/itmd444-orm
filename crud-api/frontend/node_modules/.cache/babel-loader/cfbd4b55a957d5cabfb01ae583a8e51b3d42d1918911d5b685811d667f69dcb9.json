{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeObject = exports.isObjectLike = exports.sexagesimalToDecimal = exports.isSexagesimal = exports.isDecimal = exports.processValue = void 0;\nconst error_js_1 = require(\"../error.js\");\nvar VALUE_RANGES;\n(function (VALUE_RANGES) {\n  VALUE_RANGES[VALUE_RANGES[\"NEGATIVE\"] = 0] = \"NEGATIVE\";\n  VALUE_RANGES[VALUE_RANGES[\"NON_NEGATIVE\"] = 1] = \"NON_NEGATIVE\";\n  VALUE_RANGES[VALUE_RANGES[\"POSITIVE\"] = 2] = \"POSITIVE\";\n  VALUE_RANGES[VALUE_RANGES[\"NON_POSITIVE\"] = 3] = \"NON_POSITIVE\";\n})(VALUE_RANGES || (VALUE_RANGES = {}));\nvar VALUE_TYPES;\n(function (VALUE_TYPES) {\n  VALUE_TYPES[VALUE_TYPES[\"INT\"] = 0] = \"INT\";\n  VALUE_TYPES[VALUE_TYPES[\"FLOAT\"] = 1] = \"FLOAT\";\n})(VALUE_TYPES || (VALUE_TYPES = {}));\n// More info about Sexagesimal: https://en.wikipedia.org/wiki/Sexagesimal\nconst SEXAGESIMAL_REGEX = /^([0-9]{1,3})°\\s*([0-9]{1,3}(?:\\.(?:[0-9]{1,}))?)['′]\\s*(([0-9]{1,3}(\\.([0-9]{1,}))?)[\"″]\\s*)?([NEOSW]?)$/;\n// TODO: Consider implementing coercion like this...\n// See: https://github.com/graphql/graphql-js/blob/master/src/type/scalars.js#L13\n// See: https://github.com/graphql/graphql-js/blob/master/src/type/scalars.js#L60\nfunction _validateInt(value) {\n  if (!Number.isFinite(value)) {\n    throw (0, error_js_1.createGraphQLError)(`Value is not a finite number: ${value}`);\n  }\n  if (!Number.isInteger(value)) {\n    throw (0, error_js_1.createGraphQLError)(`Value is not an integer: ${value}`);\n  }\n  if (!Number.isSafeInteger(value)) {\n    throw (0, error_js_1.createGraphQLError)(`Value is not a safe integer: ${value}`);\n  }\n}\nfunction _validateFloat(value) {\n  if (!Number.isFinite(value)) {\n    throw (0, error_js_1.createGraphQLError)(`Value is not a finite number: ${value}`);\n  }\n}\nconst VALIDATIONS = {\n  NonPositiveInt: {\n    range: VALUE_RANGES.NON_POSITIVE,\n    type: VALUE_TYPES.INT\n  },\n  PositiveInt: {\n    range: VALUE_RANGES.POSITIVE,\n    type: VALUE_TYPES.INT\n  },\n  NonNegativeInt: {\n    range: VALUE_RANGES.NON_NEGATIVE,\n    type: VALUE_TYPES.INT\n  },\n  NegativeInt: {\n    range: VALUE_RANGES.NEGATIVE,\n    type: VALUE_TYPES.INT\n  },\n  NonPositiveFloat: {\n    range: VALUE_RANGES.NON_POSITIVE,\n    type: VALUE_TYPES.FLOAT\n  },\n  PositiveFloat: {\n    range: VALUE_RANGES.POSITIVE,\n    type: VALUE_TYPES.FLOAT\n  },\n  NonNegativeFloat: {\n    range: VALUE_RANGES.NON_NEGATIVE,\n    type: VALUE_TYPES.FLOAT\n  },\n  NegativeFloat: {\n    range: VALUE_RANGES.NEGATIVE,\n    type: VALUE_TYPES.FLOAT\n  }\n};\nfunction processValue(value, scalarName) {\n  const {\n    range,\n    type\n  } = VALIDATIONS[scalarName];\n  /* eslint-disable no-restricted-globals */\n  /* eslint-disable use-isnan */\n  if (value === null || typeof value === 'undefined' || isNaN(value) || Number.isNaN(value) || value === Number.NaN) {\n    throw (0, error_js_1.createGraphQLError)(`Value is not a number: ${value}`);\n  }\n  /* eslint-enable */\n  let parsedValue;\n  switch (type) {\n    case VALUE_TYPES.FLOAT:\n      parsedValue = parseFloat(value);\n      _validateFloat(parsedValue);\n      break;\n    case VALUE_TYPES.INT:\n      parsedValue = parseInt(value, 10);\n      _validateInt(parsedValue);\n      break;\n    default:\n    // no -op, return undefined\n  }\n  if (range === VALUE_RANGES.NEGATIVE && !(parsedValue < 0) || range === VALUE_RANGES.NON_NEGATIVE && !(parsedValue >= 0) || range === VALUE_RANGES.POSITIVE && !(parsedValue > 0) || range === VALUE_RANGES.NON_POSITIVE && !(parsedValue <= 0)) {\n    throw (0, error_js_1.createGraphQLError)(`Value is not a ${VALUE_RANGES[range].toLowerCase().replace('_', '-')} number: ${value}`);\n  }\n  return parsedValue;\n}\nexports.processValue = processValue;\n/**\n * Check if the value is in decimal format.\n *\n * @param value - Value to check\n * @returns True if is decimal, false otherwise\n */\nfunction isDecimal(value) {\n  const checkedValue = value.toString().trim();\n  if (Number.isNaN(Number.parseFloat(checkedValue))) {\n    return false;\n  }\n  return Number.parseFloat(checkedValue) === Number(checkedValue);\n}\nexports.isDecimal = isDecimal;\n/**\n * Check if the value is in sexagesimal format.\n *\n * @param value - Value to check\n * @returns True if sexagesimal, false otherwise\n */\nfunction isSexagesimal(value) {\n  if (typeof value !== 'string') return false;\n  return SEXAGESIMAL_REGEX.test(value.toString().trim());\n}\nexports.isSexagesimal = isSexagesimal;\n/**\n * Converts a sexagesimal coordinate to decimal format.\n *\n * @param value - Value to convert\n * @returns Decimal coordinate\n * @throws {TypeError} if the value is not in sexagesimal format\n */\nfunction sexagesimalToDecimal(value) {\n  const data = SEXAGESIMAL_REGEX.exec(value);\n  if (typeof data === 'undefined' || data === null) {\n    throw (0, error_js_1.createGraphQLError)(`Value is not in sexagesimal format: ${value}`);\n  }\n  const min = Number(data[2]) / 60 || 0;\n  const sec = Number(data[4]) / 3600 || 0;\n  const decimal = Number.parseFloat(data[1]) + min + sec;\n  // Southern and western coordinates must be negative decimals\n  return ['S', 'W'].includes(data[7]) ? -decimal : decimal;\n}\nexports.sexagesimalToDecimal = sexagesimalToDecimal;\nfunction isObjectLike(value) {\n  return typeof value === 'object' && value !== null;\n}\nexports.isObjectLike = isObjectLike;\n// Taken from https://github.com/graphql/graphql-js/blob/30b446938a9b5afeb25c642d8af1ea33f6c849f3/src/type/scalars.ts#L267\n// Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n  return outputValue;\n}\nexports.serializeObject = serializeObject;","map":{"version":3,"names":["Object","defineProperty","exports","value","serializeObject","isObjectLike","sexagesimalToDecimal","isSexagesimal","isDecimal","processValue","error_js_1","require","VALUE_RANGES","VALUE_TYPES","SEXAGESIMAL_REGEX","_validateInt","Number","isFinite","createGraphQLError","isInteger","isSafeInteger","_validateFloat","VALIDATIONS","NonPositiveInt","range","NON_POSITIVE","type","INT","PositiveInt","POSITIVE","NonNegativeInt","NON_NEGATIVE","NegativeInt","NEGATIVE","NonPositiveFloat","FLOAT","PositiveFloat","NonNegativeFloat","NegativeFloat","scalarName","isNaN","NaN","parsedValue","parseFloat","parseInt","toLowerCase","replace","checkedValue","toString","trim","test","data","exec","min","sec","decimal","includes","outputValue","valueOf","valueOfResult","toJSON"],"sources":["/Users/snawz1/node_modules/graphql-scalars/cjs/scalars/utilities.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeObject = exports.isObjectLike = exports.sexagesimalToDecimal = exports.isSexagesimal = exports.isDecimal = exports.processValue = void 0;\nconst error_js_1 = require(\"../error.js\");\nvar VALUE_RANGES;\n(function (VALUE_RANGES) {\n    VALUE_RANGES[VALUE_RANGES[\"NEGATIVE\"] = 0] = \"NEGATIVE\";\n    VALUE_RANGES[VALUE_RANGES[\"NON_NEGATIVE\"] = 1] = \"NON_NEGATIVE\";\n    VALUE_RANGES[VALUE_RANGES[\"POSITIVE\"] = 2] = \"POSITIVE\";\n    VALUE_RANGES[VALUE_RANGES[\"NON_POSITIVE\"] = 3] = \"NON_POSITIVE\";\n})(VALUE_RANGES || (VALUE_RANGES = {}));\nvar VALUE_TYPES;\n(function (VALUE_TYPES) {\n    VALUE_TYPES[VALUE_TYPES[\"INT\"] = 0] = \"INT\";\n    VALUE_TYPES[VALUE_TYPES[\"FLOAT\"] = 1] = \"FLOAT\";\n})(VALUE_TYPES || (VALUE_TYPES = {}));\n// More info about Sexagesimal: https://en.wikipedia.org/wiki/Sexagesimal\nconst SEXAGESIMAL_REGEX = /^([0-9]{1,3})°\\s*([0-9]{1,3}(?:\\.(?:[0-9]{1,}))?)['′]\\s*(([0-9]{1,3}(\\.([0-9]{1,}))?)[\"″]\\s*)?([NEOSW]?)$/;\n// TODO: Consider implementing coercion like this...\n// See: https://github.com/graphql/graphql-js/blob/master/src/type/scalars.js#L13\n// See: https://github.com/graphql/graphql-js/blob/master/src/type/scalars.js#L60\nfunction _validateInt(value) {\n    if (!Number.isFinite(value)) {\n        throw (0, error_js_1.createGraphQLError)(`Value is not a finite number: ${value}`);\n    }\n    if (!Number.isInteger(value)) {\n        throw (0, error_js_1.createGraphQLError)(`Value is not an integer: ${value}`);\n    }\n    if (!Number.isSafeInteger(value)) {\n        throw (0, error_js_1.createGraphQLError)(`Value is not a safe integer: ${value}`);\n    }\n}\nfunction _validateFloat(value) {\n    if (!Number.isFinite(value)) {\n        throw (0, error_js_1.createGraphQLError)(`Value is not a finite number: ${value}`);\n    }\n}\nconst VALIDATIONS = {\n    NonPositiveInt: {\n        range: VALUE_RANGES.NON_POSITIVE,\n        type: VALUE_TYPES.INT,\n    },\n    PositiveInt: {\n        range: VALUE_RANGES.POSITIVE,\n        type: VALUE_TYPES.INT,\n    },\n    NonNegativeInt: {\n        range: VALUE_RANGES.NON_NEGATIVE,\n        type: VALUE_TYPES.INT,\n    },\n    NegativeInt: {\n        range: VALUE_RANGES.NEGATIVE,\n        type: VALUE_TYPES.INT,\n    },\n    NonPositiveFloat: {\n        range: VALUE_RANGES.NON_POSITIVE,\n        type: VALUE_TYPES.FLOAT,\n    },\n    PositiveFloat: {\n        range: VALUE_RANGES.POSITIVE,\n        type: VALUE_TYPES.FLOAT,\n    },\n    NonNegativeFloat: {\n        range: VALUE_RANGES.NON_NEGATIVE,\n        type: VALUE_TYPES.FLOAT,\n    },\n    NegativeFloat: {\n        range: VALUE_RANGES.NEGATIVE,\n        type: VALUE_TYPES.FLOAT,\n    },\n};\nfunction processValue(value, scalarName) {\n    const { range, type } = VALIDATIONS[scalarName];\n    /* eslint-disable no-restricted-globals */\n    /* eslint-disable use-isnan */\n    if (value === null ||\n        typeof value === 'undefined' ||\n        isNaN(value) ||\n        Number.isNaN(value) ||\n        value === Number.NaN) {\n        throw (0, error_js_1.createGraphQLError)(`Value is not a number: ${value}`);\n    }\n    /* eslint-enable */\n    let parsedValue;\n    switch (type) {\n        case VALUE_TYPES.FLOAT:\n            parsedValue = parseFloat(value);\n            _validateFloat(parsedValue);\n            break;\n        case VALUE_TYPES.INT:\n            parsedValue = parseInt(value, 10);\n            _validateInt(parsedValue);\n            break;\n        default:\n        // no -op, return undefined\n    }\n    if ((range === VALUE_RANGES.NEGATIVE && !(parsedValue < 0)) ||\n        (range === VALUE_RANGES.NON_NEGATIVE && !(parsedValue >= 0)) ||\n        (range === VALUE_RANGES.POSITIVE && !(parsedValue > 0)) ||\n        (range === VALUE_RANGES.NON_POSITIVE && !(parsedValue <= 0))) {\n        throw (0, error_js_1.createGraphQLError)(`Value is not a ${VALUE_RANGES[range].toLowerCase().replace('_', '-')} number: ${value}`);\n    }\n    return parsedValue;\n}\nexports.processValue = processValue;\n/**\n * Check if the value is in decimal format.\n *\n * @param value - Value to check\n * @returns True if is decimal, false otherwise\n */\nfunction isDecimal(value) {\n    const checkedValue = value.toString().trim();\n    if (Number.isNaN(Number.parseFloat(checkedValue))) {\n        return false;\n    }\n    return Number.parseFloat(checkedValue) === Number(checkedValue);\n}\nexports.isDecimal = isDecimal;\n/**\n * Check if the value is in sexagesimal format.\n *\n * @param value - Value to check\n * @returns True if sexagesimal, false otherwise\n */\nfunction isSexagesimal(value) {\n    if (typeof value !== 'string')\n        return false;\n    return SEXAGESIMAL_REGEX.test(value.toString().trim());\n}\nexports.isSexagesimal = isSexagesimal;\n/**\n * Converts a sexagesimal coordinate to decimal format.\n *\n * @param value - Value to convert\n * @returns Decimal coordinate\n * @throws {TypeError} if the value is not in sexagesimal format\n */\nfunction sexagesimalToDecimal(value) {\n    const data = SEXAGESIMAL_REGEX.exec(value);\n    if (typeof data === 'undefined' || data === null) {\n        throw (0, error_js_1.createGraphQLError)(`Value is not in sexagesimal format: ${value}`);\n    }\n    const min = Number(data[2]) / 60 || 0;\n    const sec = Number(data[4]) / 3600 || 0;\n    const decimal = Number.parseFloat(data[1]) + min + sec;\n    // Southern and western coordinates must be negative decimals\n    return ['S', 'W'].includes(data[7]) ? -decimal : decimal;\n}\nexports.sexagesimalToDecimal = sexagesimalToDecimal;\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexports.isObjectLike = isObjectLike;\n// Taken from https://github.com/graphql/graphql-js/blob/30b446938a9b5afeb25c642d8af1ea33f6c849f3/src/type/scalars.ts#L267\n// Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\nfunction serializeObject(outputValue) {\n    if (isObjectLike(outputValue)) {\n        if (typeof outputValue.valueOf === 'function') {\n            const valueOfResult = outputValue.valueOf();\n            if (!isObjectLike(valueOfResult)) {\n                return valueOfResult;\n            }\n        }\n        if (typeof outputValue.toJSON === 'function') {\n            return outputValue.toJSON();\n        }\n    }\n    return outputValue;\n}\nexports.serializeObject = serializeObject;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}